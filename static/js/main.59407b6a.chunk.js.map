{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","console","log","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59407b6a.chunk.js","sourcesContent":["//import React from 'react'\r\nimport axios from 'axios';\r\n\r\nconst instance=axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React,{useState,useEffect} from 'react'\r\nimport axios from './axios';\r\nimport './Row.css';\r\n// import requests from './requests';\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url=\"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row=({ title,fetchURL,isLargeRow})=> {\r\n    const [movies, setMovies] = useState([]);\r\n    const[trailerUrl,setTrailerUrl]=useState(false);\r\n\r\n    useEffect(() => {\r\n      //Run nce when the row loads,and dont run again\r\n      async function fetchData(){\r\n          const request=await axios.get(fetchURL);\r\n              //fetchURL=\"https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_networks=213\"\r\n            setMovies(request.data.results);\r\n            ;\r\n        }\r\n        fetchData();\r\n    }, [fetchURL]);\r\n    console.log(movies);\r\n\r\n    const opts={\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n            autoplay:1,\r\n        },\r\n    };\r\n const handleClick=(movie)=>{\r\n            if(trailerUrl){\r\n                setTrailerUrl(\"\");\r\n            }\r\n            else{\r\n                movieTrailer(movie?.name || \"\")\r\n                .then((url)=>{\r\n                    //https://www.youtube.com/watch?v=XtMThy8QKqU\r\n                        const urlParams=new URLSearchParams(new URL(url).search);\r\n                        setTrailerUrl(urlParams.get(\"v\"));\r\n                })\r\n                .catch((error)=>console.log(error));\r\n                \r\n            }\r\n        }\r\n    \r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h1>{title}</h1>\r\n            <div className=\"row_posters\">\r\n                {movies.map((movie)=>{\r\n                   return(\r\n                    \r\n                    //4EYPN5mVIhKLfxGruy7Dy41dTVn.jpg\r\n                    <img \r\n                    key={movie.id} \r\n                    onClick={()=>handleClick(movie)}\r\n                    className={`row_poster ${isLargeRow} && \"row_posterLarge\"}`}\r\n                    src={`${base_url}${isLargeRow?movie.poster_path:movie.backdrop_path}`} alt={movie.name}/>\r\n\r\n                   )\r\n                }\r\n                )}\r\n            </div>\r\n            <Youtube videoId={trailerUrl} opts={opts}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY=\"9cafd77105a8b6e90607b07d28fd9705\";\r\n\r\nconst requests={\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\r\n}\r\nexport default requests;\r\n","import React, {useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport  './Banner.css'\r\n\r\nconst Banner=()=> {\r\n    const[movie,setMovie]=useState([]);\r\n\r\n   useEffect(() => {\r\n      async function fetchData(){\r\n      const request=await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n          request.data.results[\r\n              Math.floor(Math.random()*request.data.results.length-1)]\r\n      );\r\n       \r\n          } \r\n      fetchData();\r\n       \r\n   },[]);\r\n\r\n   function truncate(str,n){\r\n    return (str?.length > n) ? str.substr(0, n-1) + \"...\" :str;\r\n  };\r\n        //console.log(movie);\r\n\r\n    return (\r\n        <>\r\n        <header className=\"banner\"\r\n        style={{backgroundSize:\"cover\",\r\n                backgroundImage:`url(\r\n                    \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n\r\n                )`,\r\n                backgroundPosition:\"center center\",\r\n                }}>\r\n            \r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\">\r\n                {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n\r\n                    </div>\r\n                    <h1 className=\"banner_description\">{truncate(movie?.overview, 150)}\r\n                    </h1>\r\n\r\n            </div>\r\n            <div className=\"banner--fadeBottom\">\r\n                \r\n            </div>\r\n        {/* title */}\r\n        {/* div 2 buttons */}\r\n        {/* description */}\r\n\r\n        </header>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Banner;\r\n","import React,{useState,useEffect} from 'react';\r\nimport './Nav.css';\r\n\r\nconst Nav=()=>{\r\n    const[show,handleShow]=useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY>100){\r\n                handleShow(true);\r\n            }\r\n            else handleShow(false);\r\n        });\r\n        return()=>{\r\n        window.removeEventListener(\"scroll\");\r\n        };\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`nav${show && \"nav_black\"}`}>\r\n            <img className=\"nav_logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" \r\n            alt=\"Netflix_logo\"/>\r\n\r\n            <img className=\"nav_avatar\"\r\n            src=\"\" alt=\" \"/>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react'\nimport Row from './Row';\nimport requests from './requests';\nimport './App.css';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\n const App = () => {\n  return (\n    <div className=\"App\">\n      {/* Nav */}\n      <Nav/>\n      {/* Banner */}\n       <Banner/>\n      <h1>Netflix Clone Front-end</h1>\n      <Row title=\"NETFLIX ORIGNALS\" fetchURL={requests.fetchNetflixOriginals}\n        isLargeRow={true}/>\n      <Row title=\"Trending Now\" fetchURL={requests.fetchTrending}/>\n      <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchURL={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchURL={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries}/>\n\n      \n    </div>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}